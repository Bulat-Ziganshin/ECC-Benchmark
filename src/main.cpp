#include <cstdio>
#include <thread>
#include "common.h"

#include "../unit_test/SiameseTools.cpp"

int main(int argc, char** argv)
{
    // Increase process/thread priorities to ensure repeatable results
#ifdef _WIN32
    ::SetPriorityClass(::GetCurrentProcess(), HIGH_PRIORITY_CLASS);
    ::SetThreadPriority(::GetCurrentThread(), THREAD_PRIORITY_HIGHEST);
#endif
    std::this_thread::sleep_for(std::chrono::milliseconds(100));

    ECC_bench_params params;

    // Number of bytes per file block
    params.BlockBytes = 4096;

    // Number of blocks
    params.OriginalCount = 50;

    // Number of additional recovery blocks generated by encoder
    params.RecoveryCount = 50;

    // Repeat benchmark multiple times to improve its accuracy
    params.Trials = 1000;

    printf("Usage: bench data_blocks parity_blocks chunk_size trials\n");
    if (argc>1)  params.OriginalCount = atoi(argv[1]);
    if (argc>2)  params.RecoveryCount = atoi(argv[2]);
    if (argc>3)  params.BlockBytes    = atoi(argv[3]);
    if (argc>4)  params.Trials        = atoi(argv[4]);

    // Benchmark CM256 library
    bench_cm256(params);

    return 0;
}
